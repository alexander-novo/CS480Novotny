#version 330 core

// Interpolated values from the vertex shaders
in vec2 uvCoord;
in vec3 positionW;
in vec3 normalC;
in vec3 eyeC;
in vec3 lightDirC;

// Ouput data
out vec3 frag_color;

// Values that stay constant for the whole mesh.
uniform mat4 modelMatrix;
uniform mat4 viewMatrix;

uniform vec3 MaterialDiffuseColor;
uniform vec3 MaterialAmbientColor;
uniform vec3 MaterialSpecularColor;

uniform float lightPower;

uniform sampler2D gSampler;

void main(void) {
    // Normal of the computed fragment, in camera space
    vec3 n = normalize( normalC );
    // Eye vector (towards the camera)
    vec3 E = normalize(eyeC);

    //This calculates if you're staring directly at the face, or if you're just glancing the face
    //If you're staring directly at the face - get the full brunt of the light, otherwise we lose some colors
    //Namely, blue
    float cosPhi = clamp( dot( E, n ), 0,1 );

    frag_color = vec3(1.0, 1.0, 1.0) * pow(cosPhi, 0.5) + vec3(1.0, 0.50,  0.0);
}

