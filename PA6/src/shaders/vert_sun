#version 330

layout (location = 0) in vec3 positionM;
layout (location = 1) in vec2 uv;
layout (location = 2) in vec3 normalM;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelMatrix;

out vec3 positionW;
out vec3 normalC;
out vec3 eyeC;
out vec3 lightDirC;
out vec2 uvCoord;

void main(void) {
    vec4 v = vec4(positionM, 1.0);
    gl_Position = (projectionMatrix * viewMatrix * modelMatrix) * v;

    //Vector from the vertex to the camera
    vec3 positionC = (viewMatrix * modelMatrix * vec4(positionM ,1)).xyz;
    eyeC = vec3(0,0,0) - positionC;

    // Normal of the the vertex, in camera space
    normalC = (viewMatrix * modelMatrix * vec4(normalM,0)).xyz;

    uvCoord = uv;
}